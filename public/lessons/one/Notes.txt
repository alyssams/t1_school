Notes: :Class one* HTML stands for HyperText Markup Language. It is used to create Web pages. That is, Web pages all over the world consist of HTML.We can look at how other people have coded their Web pages. Click on the "View" menu and then on "Source".* Since we’re here, let’s look a little bit closer, let’s look at dev tools* Show them how to find dev tools on both chrome and ff* Go over dev tools with them. Goto vw site* Talk about layout of dev tools, where html is and where css is* What makes webpages pretty? That's CSS—Cascading Style Sheets. Think of it like skin and makeup that covers the bones of HTML. We'll learn HTML first, then worry about CSS in later courses.* Bring up html and how it works* Goto sublime and ask to download it* Again, HTML stands for Hyper Text Markup Language. It is the language used to create all websites.* A markup language is a programming language used to make text do more than just sit on a page: it can turn text into images, links, tables, lists, and much more. HTML is the markup language we'll be learning.* Open sublime text and start with  doctype* The <!DOCTYPE> declaration must be the very first thing in your HTML document, before the <html> tag.* The <!DOCTYPE> declaration is not an HTML tag; it is an instruction to the web browser about what version of HTML the page is written in.* Again, we are declaring the page is indeed a web page and what version of HTML we are using.  There are different versions of doctype but today we’re going to use the latest one, <!DOCTYPE html>* Right after we declare the doctype let’s define that we are using writing and HTML document with the <html> tag. The rest of your webpage will live in between <html></html>. * Notice there is an ending tab there is a forward slash and then the tag name. That’s how we end the declarion* To learn HTML you gotta learn how to talk about HTML. We’ve seen <> so what are they. They are called Tags and tags are almost always in pairs. An example of that is one we just did with <html></html>.  Whenever you start a tag you’ve gotta close it. Tags also nest, which we’ll see soon so you should ALWAYS close them in the right order* Inside the html tag we have a head tag and a body tag. The head tag will always come before the body tag.* Inside the head tag let’s add a title tag. The title tag is the title of your webpage. You’ll be able to see it on the top of your browser window.* When you have an opening tag, some content inside of it and then a closing tag, that’s what we call an element!* Now for the body tag.* The content in the body is what the user will see on the page.  Remember, the body tag goes after the closing head tag.* Let’s put some elements inside the body tag!* Let’s start with heading tags. Heading tags are exactly that, they are tags declared for headings. The great thing about heading tags is there are 6 levels of headings ranging from most  important to least important and it shows! H1 is the biggest and boldest where h6 is very small. Let’s write some out on our doc. * There are also p tags. p stands for paragraph. This is used a lot when writing html b/c  we place text inside of these. * Check out doc on page and talk about default css and how you can override them.* Let’s add one more thing to this page. An image!* Adding images really makes a webpage look fancy. We can add an image by using the img tag. This tag is a bit different than the others we’ve used b/c instead of putting the content between the tags, you tell the tag WHERE to get the picture by using src. It’s also different b/c this tag SELF-CLOSES. So instead of saying </img> we would just say />.* Let’s add some images that I found from searching the internet.* Take a look at site, talk about homework. Questions.